#+TITLE: Pocket Perl - Introduzione
#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto
#+OPTIONS: html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+DESCRIPTION:
#+KEYWORDS:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+SUBTITLE:
#+INFOJS_OPT:
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.0.92.2 (<a href="http://orgmode.org">Org</a> mode 8.3.4)
#+LATEX_HEADER:
#+SETUPFILE: ~/org/notes-style.org

** Perché questo libro?

Lo scopo di Perl Pocket è fornire le nozioni fondamentali che servono
per cominciare a programmare in Perl. Dicendo così abbiamo però solo
spostato la domanda. La verità è che il Perl è rilevante e utile.

Rilevante perché Perl è un linguaggio vivo e diffuso, alla base del
funzionamento di molte applicazioni (soprattutto in ambito web):
imparare a leggere e scrivere codice Perl significa quindi essere in
grado di personalizzare un ampio insieme di programmi già pronti. Tanto
per fare un esempio RT, uno dei software più diffusi in ambito aziendale
per la gestione del bug tracking, è scritto in Perl. O ancora Bricolage,
CMS usato dall'Organizzazione Mondiale della Sanità, dalla RAND
Corporation e da molte altre organizzazioni. E ancora Movable Type,
famosa piattaforma per blog, è scritto (ed è estendibile) in Perl.

È utile, poi, perché imparando Perl è possibile risolvere rapidamente
problemi di moltissimi tipi: automazione di compiti ripetitivi,
generazione di report, realizzazione di applicazioni GUI o web, persino
giochi (Frozen Bubble è scritto in Perl).

Infine, programmare in Perl è divertente. Anzi, vi lasciamo alla lettura
del libro citando l'inventore del linguaggio, Larry Wall: “Abbiate
l'appropriata dose di divertimento!”.

** Come usare questo libro

Questo testo è stato pensato per essere letto almeno una volta (la
prima, possibilmente) da cima a fondo: la complessità aumenta in modo
graduale e gli argomenti sono organizzati in maniera da rendere minimi i
riferimenti ai capitoli successivi.

Ogni capitolo presenta esempi esplicativi: suggeriamo di provare a
copiarli e a farli funzionare tutti; un'ulteriore tecnica per ottenere
il massimo da questo libro è pensare a come modificarne il
comportamento, immaginando ogni volta cosa si otterrà e verificando con
l'esecuzione del programma la correttezza della propria previsione:
riflettere sugli errori che naturalmente si provocheranno rappresenta un
ottimo modo per imparare.

In ogni capitolo sono spiegate tutti i concetti necessari per capire gli
esempi; il paragrafo finale di ciascun capitolo presenta i riferimenti
alla documentazione, dove potrete trovare puntualizzazioni e
approfondimenti.

Nel primo capitolo spiegheremo come accedere a questi documenti, ma già
ora diciamo che è un'ottima idea affiancare alla lettura di questo
manuale un costante esame della documentazione fornita a corredo del
linguaggio. Per una più rapida consultazione, ecco una nota sulla
struttura dei capitoli.

-  [[/pocketperl/scoprire_perl.html][Capitolo 1 - Scoprire Perl]] Come
   installare Perl, come installare nuovi moduli, come leggere la
   documentazione.

-  [[/pocketperl/scoprire_perl.html][Capitolo 2 - Variabili e strutture dati fondamentali]] Concetti
  basilari sulle variabili in Perl: scalari, array e hash.

-  [[/pocketperl/variabili_e_strutture_dati_fondamentali.html][Capitolo 3 - La sintassi: strutture di controllo]] I fondamenti della
  sintassi del linguaggio: strutture di controllo e cicli; come
  scrivere la documentazione. Da qui in poi sarete in grado di
  scrivere i primi semplici programmi.

-  [[/pocketperl/strutture_complesse_e_subroutine.html][Capitolo 4 - Strutture complesse e subroutine]] Tutto o quasi quello
  che c'è da sapere per implementare strutture dati complesse. Come
  organizzare il codice in subroutine. Cenni sulla gestione delle
  eccezioni.

-  [[/pocketperl/package_e_moduli.html][Capitolo 5 - Package e moduli]] Il passo successivo è imparare a
  gestire la struttura di programmi più lunghi e complessi,
  organizzandoli in moduli distinti e separati logicamente.

-  [[/pocketperl/programmazione_a_oggetti.html][Capitolo 6 - Programmazione a oggetti]] Concetto cardine della
  programmazione.  Questo capitolo esamina l'implementazione della OOP
  (Object Oriented Programming) in Perl, mostrandone le tecniche e le
  pratiche più comuni.

-  [[/pocketperl/espressioni_regolari.html][Capitolo 7 - Le espressioni regolari]] Introduzione alle espressioni
  regolari, strumento fondamentale in Perl per la manipolazione dei
  testi.

-  [[/pocketperl/perl_e_mondo_esterno.html][Capitolo 8 - Perl e il mondo esterno]] Gestione dell'input/output:
  manipolazione di file e directory. Cenni sulla programmazione di
  CGI, sull'accesso a database e sulla realizzazione di interfacce
  grafiche.

-  [[/pocketperl/appendice.html][Appendice - Approfondimenti]] Una volta terminato il libro, quali
  strade scegliere per proseguire lo studio del linguaggio? Questo
  capitolo contiene una bibliografia commentata e una guida ai moduli
  principali che si possono trovare in Rete.

** Ringraziamenti

Sono molte le persone senza l'aiuto delle quali questo libro non sarebbe
stato possibile. In primo luogo i membri della comunità italiana di
programmatori Perl, colleghi e soprattutto amici, che anche senza
saperlo mi hanno continuamente dato ispirazione, entusiasmo e idee.
Rischiando di dimenticare imperdonabilmente qualcuno: Mattia Barbon,
Michele Beltrame, Aldo Calpini, Hakim Cassimally, Gianni Ceccarelli,
Daniele Ludovici, Andrea Maestrutti, Giuseppe Maxia, Luca Ortolani,
Valerio Paolini, Flavio Poletti, Daniele Radogna, Edoardo Sabadelli,
Angelo Selvini, Enrico Sorcinelli, Emanuele Zeppieri. Grazie a tutti, e
grazie di tutto.

Un ringraziamento particolare a Chiara Rivella, senza l'intervento della
quale forse questo libro non sarebbe mai nato.

Infine, un umile ringraziamento a Larry Wall, per aver creato il
linguaggio Perl.

** L'autore

Stefano Rodighiero vive in Spagna, a Barcellona, dove lavora come
programmatore e project manager. I dettagli per entrare in contatto con
lui si trovano sul suo sito personale: http://www.stefanorodighiero.net.
